{"version":3,"file":"product-carousel/view.js","mappings":"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","sources":["webpack://soltani/webpack/bootstrap","webpack://soltani/webpack/runtime/make namespace object","webpack://soltani/./src-blocks/product-carousel/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Frontend JavaScript for Product Carousel\n * Handles multiple carousels on the same page\n */\nconst AUTO_PLAY_TIME = 2000;\n(function () {\n  'use strict';\n\n  function initProductCarousels() {\n    // Check if EmblaCarousel is available\n    if (typeof EmblaCarousel === 'undefined') {\n      console.error('EmblaCarousel library not loaded');\n      return;\n    }\n\n    // Find ALL carousel blocks on the page\n    const carouselBlocks = document.querySelectorAll(\n      '.wc-product-carousel-block'\n    );\n\n    console.log('Found', carouselBlocks.length, 'carousel blocks');\n\n    // Initialize each carousel independently\n    carouselBlocks.forEach(function (carouselBlock, index) {\n      const emblaNode = carouselBlock.querySelector('.embla');\n\n      if (!emblaNode) {\n        console.error('Carousel element not found in block', index);\n        return;\n      }\n\n      const loop = emblaNode.dataset.loop === 'true';\n      const autoplay = emblaNode.dataset.autoplay === 'true';\n      const navigationDiv = carouselBlock.querySelector('.carousel-navigation');\n\n      console.log(\n        'Initializing carousel',\n        index,\n        '{ loop:',\n        loop,\n        'autoplay:',\n        autoplay,\n        '}'\n      );\n\n      // Function to get slides based on screen width\n      function getSlidesToShow() {\n        const width = window.innerWidth;\n\n        if (width < 480) {\n          return 1;\n        } else if (width < 768) {\n          return 2;\n        } else if (width < 1024) {\n          return 3;\n        }\n        return 4;\n      }\n\n      // Function to update slide widths\n      function updateSlideWidths() {\n        const slidesToShow = getSlidesToShow();\n        const slideWidth = 100 / slidesToShow;\n        const slides = emblaNode.querySelectorAll('.embla__slide');\n\n        slides.forEach((slide) => {\n          slide.style.flex = `0 0 ${slideWidth}%`;\n        });\n      }\n\n      // Function to show/hide navigation\n      function updateNavigationVisibility() {\n        const slidesToShow = getSlidesToShow();\n        const totalProducts =\n          emblaNode.querySelectorAll('.embla__slide').length;\n\n        if (navigationDiv) {\n          if (totalProducts > slidesToShow) {\n            navigationDiv.style.display = 'flex';\n          } else {\n            navigationDiv.style.display = 'none';\n          }\n        }\n      }\n\n      // Initial setup\n      updateSlideWidths();\n\n      // Initialize Embla Carousel\n      const emblaApi = EmblaCarousel(emblaNode, {\n        loop,\n        slidesToScroll: 1,\n        align: 'start',\n        containScroll: 'trimSnaps',\n      });\n\n      // Get navigation buttons for THIS specific carousel\n      const prevBtn = carouselBlock.querySelector('.embla__prev');\n      const nextBtn = carouselBlock.querySelector('.embla__next');\n\n      // Button handlers\n      if (prevBtn) {\n        prevBtn.addEventListener('click', function (e) {\n          e.preventDefault();\n          emblaApi.scrollPrev();\n        });\n      }\n\n      if (nextBtn) {\n        nextBtn.addEventListener('click', function (e) {\n          e.preventDefault();\n          emblaApi.scrollNext();\n        });\n      }\n\n      // Update button states\n      function updateButtonStates() {\n        if (prevBtn) {\n          const canScrollPrev = emblaApi.canScrollPrev();\n          prevBtn.disabled = !canScrollPrev;\n          prevBtn.style.opacity = canScrollPrev ? '1' : '0.3';\n        }\n        if (nextBtn) {\n          const canScrollNext = emblaApi.canScrollNext();\n          nextBtn.disabled = !canScrollNext;\n          nextBtn.style.opacity = canScrollNext ? '1' : '0.3';\n        }\n      }\n\n      // Set up Embla events\n      emblaApi.on('select', updateButtonStates);\n      emblaApi.on('init', function () {\n        updateButtonStates();\n        updateNavigationVisibility();\n      });\n\n      // Initial updates\n      updateButtonStates();\n      updateNavigationVisibility();\n\n      // Autoplay functionality\n      let autoplayInterval;\n      if (autoplay) {\n        autoplayInterval = setInterval(function () {\n          emblaApi.scrollNext();\n        }, AUTO_PLAY_TIME);\n\n        emblaNode.addEventListener('mouseenter', function () {\n          if (autoplayInterval) {\n            clearInterval(autoplayInterval);\n          }\n        });\n\n        emblaNode.addEventListener('mouseleave', function () {\n          if (autoplay) {\n            autoplayInterval = setInterval(function () {\n              emblaApi.scrollNext();\n            }, AUTO_PLAY_TIME);\n          }\n        });\n      }\n\n      // Update on window resize with debounce\n      let resizeTimeout;\n      window.addEventListener('resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          updateSlideWidths();\n          emblaApi.reInit();\n          updateButtonStates();\n          updateNavigationVisibility();\n        }, 250);\n      });\n\n      console.log('Carousel', index, 'initialized successfully');\n    });\n  }\n\n  // Initialize when DOM is ready\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initProductCarousels);\n  } else {\n    initProductCarousels();\n  }\n})();\n"],"names":["AUTO_PLAY_TIME","initProductCarousels","EmblaCarousel","console","error","carouselBlocks","document","querySelectorAll","log","length","forEach","carouselBlock","index","emblaNode","querySelector","loop","dataset","autoplay","navigationDiv","getSlidesToShow","width","window","innerWidth","updateSlideWidths","slidesToShow","slideWidth","slides","slide","style","flex","updateNavigationVisibility","totalProducts","display","emblaApi","slidesToScroll","align","containScroll","prevBtn","nextBtn","addEventListener","e","preventDefault","scrollPrev","scrollNext","updateButtonStates","canScrollPrev","disabled","opacity","canScrollNext","on","autoplayInterval","setInterval","clearInterval","resizeTimeout","clearTimeout","setTimeout","reInit","readyState"],"sourceRoot":""}